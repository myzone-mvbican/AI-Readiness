I need the following improvements to the Survey Creation and Editing flow, data validation, and visibility logic.

üßæ 1. Zod Validation for Survey Form
Apply zod schema validation in both:

survey-create-dialog

survey-edit-dialog

Fields to validate:
title: required, min length 3 chars

ts
Copy
Edit
z.string().min(3, "Title must be at least 3 characters")
visibility: can be:

"global" (default)

Array of one or more teamIds (strings)

Use union or conditional logic to allow either "global" or string[]

ts
Copy
Edit
z.union([
  z.literal("global"),
  z.array(z.string().uuid()).min(1)
])
status: enum "draft" | "public" (default to "draft")

ts
Copy
Edit
z.enum(["draft", "public"]).default("draft")
csvFile: can remain optional or handled via separate input validation (client-side)

‚öôÔ∏è 2. Backend Model Adjustments (Visibility Support)
Update the Survey model and DB structure to support multiple teams:

ts
Copy
Edit
Survey {
  id: string
  title: string
  status: "draft" | "public"
  visibility: "global" | string[] // teamIds
  createdBy: userId
  csvUrl: string
  createdAt: Date
  updatedAt: Date
}
If visibility = "global" ‚Üí everyone (all teams) can access

If visibility = [teamIds] ‚Üí only those teams can access the survey

On the backend:

Adjust POST /api/surveys and PUT /api/surveys/:id to accept and store this field

Ensure team permission checks use visibility correctly

üêû 3. Fix: survey-edit-dialog Not Updating Visibility
Currently, changing visibility does not persist to the backend

Fix by:

Binding react-hook-form values to the multi-team selector

Mapping "Global" to "global" and all others to teamId[]

Sending the visibility field in the PUT /api/surveys/:id request

üìä 4. Adjust survey-table Visibility Column
In the DataTable, update the Visibility column:

If survey is "global" ‚Üí display Global as a Badge

If visibility is teamId[]:

Fetch matching team names

Display them as a comma-separated list or group of Badge components

Use compact badges (e.g., variant="secondary") for UI clarity

‚ö†Ô∏è Do Not:
Do not make team selection required ‚Äî "global" is the fallback

Do not break existing CSV file parsing or submission logic

Do not expose team IDs in the frontend ‚Äî always resolve names before rendering

‚úÖ Final Checklist:

 Validate all inputs with Zod

 Fix team visibility persistence on edit

 Update backend DB to support multi-team or global visibility

 Show visibility in table using proper UI

 Use default fallback "global" when no team is selected